/* $Id$
 *
 * Copyright Â© 2004 Keith Packard
 *
 * This library is free software; you can redistribute it and/or
 * modify it either under the terms of the GNU Lesser General Public
 * License version 2.1 as published by the Free Software Foundation
 * (the "LGPL") or, at your option, under the terms of the Mozilla
 * Public License Version 1.1 (the "MPL"). If you do not alter this
 * notice, a recipient may use your version of this file under either
 * the MPL or the LGPL.
 *
 * You should have received a copy of the LGPL along with this library
 * in the file COPYING-LGPL-2.1; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * You should have received a copy of the MPL along with this library
 * in the file COPYING-MPL-1.1
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY
 * OF ANY KIND, either express or implied. See the LGPL or the MPL for
 * the specific language governing rights and limitations.
 *
 * The Original Code is the cairo graphics library.
 *
 * The Initial Developer of the Original Code is Keith Packard
 *
 * Contributor(s):
 *      Keith Packard <keithp@keithp.com>
 */

autoimport Cairo;

void clear (foreign cr) {
    save (cr);
    identity_matrix (cr);
    set_source_rgb (cr, 1, 1, 1);
    int w = width (cr);
    int h = height (cr);
    move_to (cr, 0, 0);
    line_to (cr, w, 0);
    line_to (cr, w, h);
    line_to (cr, 0, h);
    fill (cr);
    restore (cr);
}

void draw_sin (foreign cr) {
    clear (cr);
    set_line_width (cr, sqrt (width(cr)**2 + height(cr)**2) * 0.01);
    save (cr);
    translate (cr, width(cr)/2, height(cr)/2);
    scale (cr, .95 * width(cr) / (2 * pi), .95 * height(cr) / 2);
    move_to (cr, -pi, 0);
    for (real a = -pi; a <= pi; a += pi/100) {
	line_to (cr, a, sin(a));
    }
    restore (cr);
    stroke (cr);
}

cairo_t cr = new ();
draw_sin (cr);
while (true) sleep (1000);
